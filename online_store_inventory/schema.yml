openapi: 3.0.3
info:
  title: online store inventory API
  version: 1.0.0
  description: API to manage inventory activities
paths:
  /api/inventory_item/{id}/:
    get:
      operationId: inventory_item_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - inventory_item
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InventoryItem'
          description: ''
    put:
      operationId: inventory_item_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - inventory_item
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InventoryItem'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/InventoryItem'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/InventoryItem'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InventoryItem'
          description: ''
    delete:
      operationId: inventory_item_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - inventory_item
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/inventory_items/:
    get:
      operationId: inventory_items_retrieve
      tags:
      - inventory_items
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InventoryItem'
          description: ''
    post:
      operationId: inventory_items_create
      tags:
      - inventory_items
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InventoryItem'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/InventoryItem'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/InventoryItem'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InventoryItem'
          description: ''
  /api/supplier/{id}/:
    get:
      operationId: supplier_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - supplier
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Supplier'
          description: ''
    put:
      operationId: supplier_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - supplier
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Supplier'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Supplier'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Supplier'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Supplier'
          description: ''
  /api/suppliers/:
    get:
      operationId: suppliers_retrieve
      tags:
      - suppliers
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Supplier'
          description: ''
    post:
      operationId: suppliers_create
      tags:
      - suppliers
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Supplier'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Supplier'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Supplier'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Supplier'
          description: ''
  /api/token/:
    post:
      operationId: token_create
      description: |-
        Takes a set of user credentials and returns an access and refresh JSON web
        token pair to prove the authentication of those credentials.
      tags:
      - token
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenObtainPair'
          description: ''
  /api/token/refresh/:
    post:
      operationId: token_refresh_create
      description: |-
        Takes a refresh type JSON web token and returns an access type JSON web
        token if the refresh token is valid.
      tags:
      - token
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenRefresh'
          description: ''
  /api/users/login/:
    post:
      operationId: users_login_create
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Login'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Login'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Login'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Login'
          description: ''
  /api/users/register/:
    post:
      operationId: users_register_create
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Registration'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Registration'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Registration'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Registration'
          description: ''
components:
  schemas:
    InventoryItem:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 100
        price:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
          description: currency in euro(€)
        description:
          type: string
        created_at:
          type: string
          format: date-time
          readOnly: true
        suppliers:
          type: array
          items:
            type: integer
        item_suppliers:
          type: array
          items:
            $ref: '#/components/schemas/ItemSupplier'
        added_by:
          type: integer
          readOnly: true
      required:
      - added_by
      - created_at
      - description
      - id
      - item_suppliers
      - name
      - price
      - suppliers
    ItemSupplier:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        supply_date:
          type: string
          format: date
        supplier_price:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
          description: currency in euro(€)
        quantity_supplied:
          type: integer
          maximum: 9223372036854775807
          minimum: -9223372036854775808
          format: int64
        inventory_item:
          type: integer
        supplier:
          type: integer
      required:
      - id
      - quantity_supplied
      - supplier
      - supplier_price
      - supply_date
    Login:
      type: object
      properties:
        username:
          type: string
          maxLength: 50
        password:
          type: string
          writeOnly: true
      required:
      - password
      - username
    Registration:
      type: object
      properties:
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        password:
          type: string
          writeOnly: true
          maxLength: 128
        email:
          type: string
          format: email
          title: Email address
          maxLength: 254
      required:
      - password
      - username
    Supplier:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 100
        phone_number:
          type: string
          maxLength: 20
        email:
          type: string
          format: email
          nullable: true
          maxLength: 254
        address:
          type: string
        created_at:
          type: string
          format: date-time
          readOnly: true
        added_by:
          type: integer
          readOnly: true
      required:
      - added_by
      - address
      - created_at
      - id
      - name
      - phone_number
    TokenObtainPair:
      type: object
      properties:
        username:
          type: string
          writeOnly: true
        password:
          type: string
          writeOnly: true
        access:
          type: string
          readOnly: true
        refresh:
          type: string
          readOnly: true
      required:
      - access
      - password
      - refresh
      - username
    TokenRefresh:
      type: object
      properties:
        access:
          type: string
          readOnly: true
        refresh:
          type: string
          writeOnly: true
      required:
      - access
      - refresh
  securitySchemes:
    jwtAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
